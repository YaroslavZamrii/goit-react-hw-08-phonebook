{"version":3,"file":"static/js/139.58cd781e.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.js","pages/Register.js","../node_modules/@mui/icons-material/HowToReg.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js"],"sourcesContent":["import {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Box,\n  Typography,\n  Container,\n} from '@mui/material';\nimport HowToRegIcon from '@mui/icons-material/HowToReg';\nimport { useState } from 'react';\n\nexport const RegisterForm = () => {\n  const [isErrorName, setIsErrorName] = useState(false);\n  const [isErrorMail, setIsErrorMail] = useState(false);\n  const [isErrorPass, setIsErrorPass] = useState(false);\n\n  const isButtonDisabled = isErrorName || isErrorMail || isErrorPass;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n\n    const data = {\n      name: formData.get('name'),\n      email: formData.get('email'),\n      password: formData.get('password'),\n    };\n    console.log('data:', data);\n\n    e.target.reset();\n  };\n\n  const handleChangeName = e => {\n    if (e.target.value.trim().length === 0) {\n      setIsErrorName(true);\n    } else {\n      setIsErrorName(false);\n    }\n  };\n  const handleChangeEmail = e => {\n    const validMail = e.target.value.includes('@');\n    const minLength = e.target.value.length > 6;\n    if (validMail && minLength) {\n      setIsErrorMail(false);\n    } else {\n      setIsErrorMail(true);\n    }\n  };\n  const handleChangePassword = e => {\n    const isValidPassword = e.target.value.length > 6;\n    if (isValidPassword) {\n      setIsErrorPass(false);\n    } else {\n      setIsErrorPass(true);\n    }\n  };\n\n  return (\n    <>\n      <Container component=\"div\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n            <HowToRegIcon />\n          </Avatar>\n          <Typography component=\"h2\" variant=\"h5\">\n            Register\n          </Typography>\n          <Box\n            // component=\"form\"\n            // onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <form onSubmit={handleSubmit}>\n              <TextField\n                required\n                margin=\"normal\"\n                fullWidth\n                id=\"name\"\n                label=\"User name\"\n                name=\"name\"\n                onChange={handleChangeName}\n                error={isErrorName}\n                helperText={'Enter your name!'}\n              />\n              <TextField\n                required\n                margin=\"normal\"\n                fullWidth\n                id=\"email\"\n                label=\"E-mail\"\n                name=\"email\"\n                onChange={handleChangeEmail}\n                error={isErrorMail}\n                helperText={'email@example.com'}\n              />\n              <TextField\n                required\n                margin=\"normal\"\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                onChange={handleChangePassword}\n                error={isErrorPass}\n                helperText={'Password must be more than 7 characters'}\n              />\n\n              <Button\n                disabled={isButtonDisabled}\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Register\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Container>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport React from 'react';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"m9 17 3-2.94c-.39-.04-.68-.06-1-.06-2.67 0-8 1.34-8 4v2h9l-3-3zm2-5c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m4.47 8.5L12 17l1.4-1.41 2.07 2.08 5.13-5.17 1.4 1.41z\"\n}), 'HowToReg');\nexports.default = _default;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;"],"names":["RegisterForm","useState","isErrorName","setIsErrorName","isErrorMail","setIsErrorMail","isErrorPass","setIsErrorPass","isButtonDisabled","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","HowToReg","Typography","variant","noValidate","mt","onSubmit","e","preventDefault","formData","FormData","target","data","name","get","email","password","console","log","reset","TextField","required","margin","fullWidth","id","label","onChange","value","trim","length","error","helperText","validMail","includes","minLength","type","isValidPassword","Button","disabled","mb","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","fillRule","d","html","theme","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","common","white","inProps","props","useThemeProps","children","_jsxs","React","_jsx","GlobalStyles","styles","_theme$components","colorSchemeStyles","colorSchemes","Object","entries","forEach","_scheme$palette","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","themeOverrides","components","MuiCssBaseline","styleOverrides"],"sourceRoot":""}