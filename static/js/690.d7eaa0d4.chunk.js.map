{"version":3,"file":"static/js/690.d7eaa0d4.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.jsx","pages/Login.js","../node_modules/@mui/icons-material/Login.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Box,\n  Typography,\n  Container,\n} from '@mui/material';\nimport LoginIcon from '@mui/icons-material/Login';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUserThunk } from 'redux/auth/authOperations';\nimport { selectAuthentificated } from 'redux/auth/authSlice';\nimport { Navigate } from 'react-router-dom';\n\nconst LoginForm = () => {\n  const [isErrorMail, setIsErrorMail] = useState(null);\n  const [isErrorPass, setIsErrorPass] = useState(null);\n\n  const dispatch = useDispatch();\n  const isButtonDisabled = isErrorMail || isErrorPass;\n  const authenticated = useSelector(selectAuthentificated);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n\n    const data = {\n      email: formData.get('email'),\n      password: formData.get('password'),\n    };\n    dispatch(loginUserThunk(data));\n    e.target.reset();\n  };\n\n  const handleChangeEmail = e => {\n    const validMail = e.target.value.includes('@');\n    const minLength = e.target.value.length > 9;\n    if (validMail && minLength) {\n      setIsErrorMail(null);\n    } else {\n      setIsErrorMail(true);\n    }\n  };\n  const handleChangePassword = e => {\n    const isValidPassword = e.target.value.length > 6;\n    if (isValidPassword) {\n      setIsErrorPass(null);\n    } else {\n      setIsErrorPass(true);\n    }\n  };\n\n  if (authenticated) return <Navigate to=\"/contacts\" />;\n\n  return (\n    <>\n      <Container component=\"div\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n            <LoginIcon />\n          </Avatar>\n          <Typography component=\"h2\" variant=\"h5\">\n            Log in\n          </Typography>\n          <Box noValidate sx={{ mt: 1 }}>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={handleChangeEmail}\n                error={isErrorMail}\n                helperText={'email@example.com'}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={handleChangePassword}\n                error={isErrorPass}\n                helperText={'Password must be more than 7 characters'}\n              />\n              <Button\n                disabled={isButtonDisabled}\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Log in\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport React from 'react';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 7 9.6 8.4l2.6 2.6H2v2h10.2l-2.6 2.6L11 17l5-5-5-5zm9 12h-8v2h8c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-8v2h8v14z\"\n}), 'Login');\nexports.default = _default;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;"],"names":["useState","isErrorMail","setIsErrorMail","isErrorPass","setIsErrorPass","dispatch","useDispatch","isButtonDisabled","useSelector","selectAuthentificated","to","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Login","Typography","variant","noValidate","mt","onSubmit","e","preventDefault","formData","FormData","target","data","email","get","password","loginUserThunk","reset","TextField","margin","required","fullWidth","id","label","name","autoComplete","onChange","validMail","value","includes","minLength","length","error","helperText","type","isValidPassword","Button","disabled","mb","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","html","theme","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","common","white","inProps","props","useThemeProps","children","_jsxs","React","_jsx","GlobalStyles","styles","_theme$components","colorSchemeStyles","colorSchemes","Object","entries","forEach","_scheme$palette","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","themeOverrides","components","MuiCssBaseline","styleOverrides"],"sourceRoot":""}